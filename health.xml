<?xml version="1.0"?>
<doc>
    <assembly>
        <name>health</name>
    </assembly>
    <members>
        <member name="T:health.common.BaseConfig">
            <summary>
            基础公用类
            </summary>
        </member>
        <member name="M:health.common.BaseConfig.getArea(System.Int32,Newtonsoft.Json.Linq.JObject,System.Collections.Generic.IDictionary{System.Int32,Newtonsoft.Json.Linq.JArray})">
            <summary>
            递归调用
            </summary>
            <param name="id"></param>
            <param name="obj"></param>
            <param name="node"></param>
        </member>
        <member name="M:health.BaseData.AddressCategoryController.GetAddressCategoryList">
            <summary>
            获取“地址类型”列表
            </summary>
            <returns>JSON对象，包含所有可用的“地址类型”数组</returns>
        </member>
        <member name="M:health.BaseData.AddressCategoryController.GetAddressCategory(System.Int32)">
            <summary>
            获取“地址类型”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“地址类型”信息</returns>
        </member>
        <member name="M:health.BaseData.AddressCategoryController.SetAddressCategory(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“地址类型”
            </summary>
            <param name="req">JSON对象，包含待修改的“地址类型”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.BaseData.AddressCategoryController.DelAddressCategory(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“地址类型”
            </summary>
            <param name="req">JSON对象，包含待删除的“地址类型”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.AreaController.GetAreaList(System.Int32)">
            <summary>
            获取“区域”列表
            </summary>
            <param name="parentId">指定parentId</param>
            <returns>JSON对象，包含指定parentId的下属“区域”数组</returns>
        </member>
        <member name="M:health.Controllers.AreaController.GetBaseData">
            <summary>
            获取层级的“区域”列表
            </summary>
            <returns>JSON对象，包含层级的区域列表</returns>
        </member>
        <member name="M:health.Controllers.AreaController.GetArea(System.Int32)">
            <summary>
            获取“区域”信息
            </summary>
            <returns>获取指定id的“区域”信息</returns>
        </member>
        <member name="M:health.Controllers.AreaController.SetArea(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“区域”
            </summary>
            <param name="req">JSON对象，包含待修改的“区域”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.AreaController.DelArea(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“区域”
            </summary>
            <param name="req">JSON对象，包含待删除的“区域”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.DetectionResultTypeController.GetDetectionResultTypeList(System.Int32)">
            <summary>
            获取“检测结果”列表
            </summary>
            <returns>JSON对象，包含“检测结果”的数组</returns>
        </member>
        <member name="M:health.Controllers.DetectionResultTypeController.GetDetectionResultType(System.Int32)">
            <summary>
            获取“检测结果”信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:health.Controllers.DetectionResultTypeController.SetDetectionResultType(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“检测结果”
            </summary>
            <param name="req">JSON对象，包含待修改的“检测结果”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.DetectionResultTypeController.DelDetectionResultType(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“检测结果”
            </summary>
            <param name="req">JSON对象，包含待删除的“检测结果”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.DomiTypeController.GetDomiTypeList">
            <summary>
            获取“户籍类型”列表
            </summary>
            <returns>JSON对象，包含所有可用的“户籍类型”数组</returns>
        </member>
        <member name="M:health.Controllers.DomiTypeController.GetDomiType(System.Int32)">
            <summary>
            获取“户籍类型”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“户籍类型”信息</returns>
        </member>
        <member name="M:health.Controllers.DomiTypeController.SetDomiType(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“户籍类型”
            </summary>
            <param name="req">JSON对象，包含待修改的“户籍类型”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.DomiTypeController.DelDomiType(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“户籍类型”
            </summary>
            <param name="req">JSON对象，包含待删除的“户籍类型”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.GenderController.GetGenderList">
            <summary>
            获取“性别”列表
            </summary>
            <returns>JSON对象，包含所有可用的“性别”数组</returns>
        </member>
        <member name="M:health.Controllers.GenderController.GetGender(System.Int32)">
            <summary>
            获取“性别”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“性别”信息</returns>
        </member>
        <member name="M:health.Controllers.GenderController.SetGender(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“性别”
            </summary>
            <param name="req">JSON对象，包含待修改的“性别”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.GenderController.DelGender(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“性别”
            </summary>
            <param name="req">JSON对象，包含待删除的“性别”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.IdCategoryController.GetIdCategoryList">
            <summary>
            获取“身份证件类型”列表
            </summary>
            <returns>JSON对象，包含所有可用的“身份证件类型”数组</returns>
        </member>
        <member name="M:health.Controllers.IdCategoryController.GetIdCategory(System.Int32)">
            <summary>
            获取“身份证件类型”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“身份证件类型”信息</returns>
        </member>
        <member name="M:health.Controllers.IdCategoryController.SetIdCategory(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“身份证件类型”
            </summary>
            <param name="req">JSON对象，包含待修改的“身份证件类型”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.IdCategoryController.DelIdCategory(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“身份证件类型”
            </summary>
            <param name="req">JSON对象，包含待删除的“身份证件类型”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationDosageFormController.GetMedicationDosageFormList(System.Int32)">
            <summary>
            获取“药物剂型”列表
            </summary>
            <returns>JSON对象，包含所有可用的“药物剂型”数组</returns>
        </member>
        <member name="M:health.Controllers.MedicationDosageFormController.GetMedicationDosageForm(System.Int32)">
            <summary>
            获取“药物剂型”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“药物剂型”信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationDosageFormController.SetMedicationDosageForm(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“药物剂型”
            </summary>
            <param name="req">JSON对象，包含待修改的“药物剂型”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationDosageFormController.DelMedicationDosageForm(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“药物剂型”
            </summary>
            <param name="req">JSON对象，包含待删除的“药物剂型”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationFreqCategoryController.GetMedicationFreqCategoryList">
            <summary>
            获取“用药频次”列表
            </summary>
            <returns>JSON对象，包含所有可用的“用药频次”数组</returns>
        </member>
        <member name="M:health.Controllers.MedicationFreqCategoryController.GetMedicationFreqCategory(System.Int32)">
            <summary>
            获取“用药频次”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“用药频次”信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationFreqCategoryController.SetMedicationFreqCategory(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“用药频次”
            </summary>
            <param name="req">JSON对象，包含待修改的“用药频次”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationFreqCategoryController.DelMedicationFreqCategory(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“用药频次”
            </summary>
            <param name="req">JSON对象，包含待删除的“用药频次”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationPathwayController.GetMedicationPathwayList">
            <summary>
            获取“用药途径”列表
            </summary>
            <returns>JSON对象，包含所有可用的“用药途径”数组</returns>
        </member>
        <member name="M:health.Controllers.MedicationPathwayController.GetMedicationPathway(System.Int32)">
            <summary>
            获取“用药途径”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“用药途径”信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationPathwayController.SetMedicationPathway(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“用药途径”
            </summary>
            <param name="req">JSON对象，包含待修改的“用药途径”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationPathwayController.DelMedicationPathway(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“用药途径”
            </summary>
            <param name="req">JSON对象，包含待删除的“用药途径”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.NationController.GetNationList">
            <summary>
            获取“民族”列表
            </summary>
            <returns>JSON对象，包含所有可用的“民族”数组</returns>
        </member>
        <member name="M:health.Controllers.NationController.GetNation(System.Int32)">
            <summary>
            获取“民族”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“民族”信息</returns>
        </member>
        <member name="M:health.Controllers.NationController.SetNation(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“民族”
            </summary>
            <param name="req">JSON对象，包含待修改的“民族”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.NationController.DelNation(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“民族”
            </summary>
            <param name="req">JSON对象，包含待删除的“民族”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.OccupationController.GetOccupationList">
            <summary>
            获取“职业”列表
            </summary>
            <returns>JSON对象，包含所有可用的“职业”数组</returns>
        </member>
        <member name="M:health.Controllers.OccupationController.GetOccupation(System.Int32)">
            <summary>
            获取“职业”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“职业”信息</returns>
        </member>
        <member name="M:health.Controllers.OccupationController.SetOccupation(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“职业”
            </summary>
            <param name="req">JSON对象，包含待修改的“职业”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.OccupationController.DelOccupation(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“职业”
            </summary>
            <param name="req">JSON对象，包含待删除的“职业”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.TreatmentOptionController.GetTreatmentOptionList">
            <summary>
            获取“治疗方案”列表
            </summary>
            <returns>JSON对象，包含所有可用的“治疗方案”数组</returns>
        </member>
        <member name="M:health.Controllers.TreatmentOptionController.GetTreatmentOption(System.Int32)">
            <summary>
            获取“治疗方案”信息
            </summary>
            <param name="id">指定id</param>
            <returns>JSON对象，包含相应的“治疗方案”信息</returns>
        </member>
        <member name="M:health.Controllers.TreatmentOptionController.SetTreatmentOption(Newtonsoft.Json.Linq.JObject)">
            <summary>
            修改“治疗方案”
            </summary>
            <param name="req">JSON对象，包含待修改的“治疗方案”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.TreatmentOptionController.DelTreatmentOption(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“治疗方案”
            </summary>
            <param name="req">JSON对象，包含待删除的“治疗方案”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="T:health.Controllers.BaseData.UserController">
            <summary>
            登录用户管理
            </summary>
        </member>
        <member name="M:health.Controllers.BaseData.UserController.GetBaseData">
            <summary>
            获取人员信息相关基础资料信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:health.Controllers.BaseData.UserController.GetUser(System.Int32)">
            <summary>
            获取单个用户信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:health.Controllers.BaseData.UserController.SetUser(System.Int32,Newtonsoft.Json.Linq.JObject)">
            <summary>
            用户信息提交/修改
            </summary>
            <param name="id"></param>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:health.Controllers.BaseData.UserController.GetList(System.Int32,System.Int32)">
            <summary>
            用户列表
            </summary>
            <param name="pagesize">每页记录数</param>
            <param name="page">页</param>
            <returns></returns>
        </member>
        <member name="M:health.Controllers.BaseData.UserController.GetOrgList(System.String)">
            <summary>
            机构列表
            </summary>
            <param name="cname"></param>
            <returns></returns>
        </member>
        <member name="M:health.Controllers.AppointController.GetOrgAppointList(System.Int32)">
            <summary>
            获取机构的“预约”列表
            </summary>
            <param name="orgid">检索指定机构的id</param>
            <returns>JSON对象，包含相应的“预约”数组</returns>
        </member>
        <member name="M:health.Controllers.AppointController.GetPersonAppointList(System.Int32)">
            <summary>
            获取个人的“预约”历史
            </summary>
            <param name="personid">检索指定个人的id</param>
            <returns>JSON对象，包含相应的“预约”数组</returns>
        </member>
        <member name="M:health.Controllers.AppointController.GetAppoint(System.Int32)">
            <summary>
            获取“预约”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“预约”信息</returns>
        </member>
        <member name="M:health.Controllers.AppointController.SetAppoint(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“预约”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“预约”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.AppointController.DelAppoint(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“预约”。
            </summary>
            <param name="req">在请求body中JSON形式的“预约”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.AttandentController.GetOrgAttandentList(System.Int32)">
            <summary>
            获取机构的“就诊”列表
            </summary>
            <param name="orgid">检索指定机构的id</param>
            <returns>JSON对象，包含相应的“就诊”数组</returns>
        </member>
        <member name="M:health.Controllers.AttandentController.GetPersonAttandentList(System.Int32)">
            <summary>
            获取个人的“就诊”历史
            </summary>
            <param name="personid">检索指定个人的id</param>
            <returns>JSON对象，包含相应的“就诊”数组</returns>
        </member>
        <member name="M:health.Controllers.AttandentController.GetAttandent(System.Int32)">
            <summary>
            获取“就诊”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“就诊”信息</returns>
        </member>
        <member name="M:health.Controllers.AttandentController.SetAttandent(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“就诊”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“就诊”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.AttandentController.DelAttandent(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“就诊”。
            </summary>
            <param name="req">在请求body中JSON形式的“就诊”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.CheckController.GetOrgCheckList(System.Int32)">
            <summary>
            获取机构的“检测”列表
            </summary>
            <param name="orgid">检索指定机构的id</param>
            <returns>JSON对象，包含相应的“检测”数组</returns>
        </member>
        <member name="M:health.Controllers.CheckController.GetPersonCheckList(System.Int32)">
            <summary>
            获取个人的“检测”历史
            </summary>
            <param name="personid">检索指定个人的id</param>
            <returns>JSON对象，包含相应的“检测”数组</returns>
        </member>
        <member name="M:health.Controllers.CheckController.GetCheck(System.Int32)">
            <summary>
            获取“检测”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“检测”信息</returns>
        </member>
        <member name="M:health.Controllers.CheckController.SetCheck(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“检测”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“检测”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.CheckController.DelCheck(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“检测”。
            </summary>
            <param name="req">在请求body中JSON形式的“检测”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.CheckItemController.GetOrgCheckItemList(System.Int32)">
            <summary>
            获取机构的“检测”列表
            </summary>
            <param name="orgid">检索指定机构的id</param>
            <returns>JSON对象，包含相应的“检测”数组</returns>
        </member>
        <member name="M:health.Controllers.CheckItemController.GetPersonCheckItemList(System.Int32)">
            <summary>
            获取个人的“检测”历史
            </summary>
            <param name="personid">检索指定个人的id</param>
            <returns>JSON对象，包含相应的“检测”数组</returns>
        </member>
        <member name="M:health.Controllers.CheckItemController.GetCheckItem(System.Int32)">
            <summary>
            获取“检测”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“检测”信息</returns>
        </member>
        <member name="M:health.Controllers.CheckItemController.SetCheckItem(Newtonsoft.Json.Linq.JObject[])">
            <summary>
            更改“检测”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="items">在请求body中JSON形式的“检测”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.CheckItemController.DelCheckItem(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“检测”。
            </summary>
            <param name="req">在请求body中JSON形式的“检测”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.FollowupController.GetOrgFollowupList(System.Int32)">
            <summary>
            获取机构的“随访”列表
            </summary>
            <param name="orgid">检索指定机构的id</param>
            <returns>JSON对象，包含相应的“随访”数组</returns>
        </member>
        <member name="M:health.Controllers.FollowupController.GetPersonFollowupList(System.Int32)">
            <summary>
            获取个人的“随访”历史
            </summary>
            <param name="personid">检索指定个人的id</param>
            <returns>JSON对象，包含相应的“随访”数组</returns>
        </member>
        <member name="M:health.Controllers.FollowupController.GetFollowup(System.Int32)">
            <summary>
            获取“随访”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“随访”信息</returns>
        </member>
        <member name="M:health.Controllers.FollowupController.SetFollowup(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“随访”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“随访”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.FollowupController.DelFollowup(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“随访”。
            </summary>
            <param name="req">在请求body中JSON形式的“随访”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MessageController.GetMessageList">
            <summary>
            获取“公告”列表，[科普公告]菜单
            </summary>
            <returns>JSON对象，包含相应的公告数组</returns>
        </member>
        <member name="M:health.Controllers.MessageController.GetMessage(System.Int32)">
            <summary>
            获取“公告”信息，点击[科普公告]中的一个栏目
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“公告”信息</returns>
        </member>
        <member name="M:health.Controllers.MessageController.SetMessage(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“公告”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“公告”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MessageController.DelMessage(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“公告”。
            </summary>
            <param name="req">在请求body中JSON形式的“公告”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.ReadMessageController.GetList(System.Int32)">
            <summary>
            获取“未读消息”列表，[科普公告]菜单
            </summary>
            <returns>JSON对象，包含相应的“未读消息”数组</returns>
        </member>
        <member name="M:health.Controllers.ReadMessageController.Get(System.Int32,System.Int32)">
            <summary>
            打开“未读消息”信息，点击[科普公告]中的一个“未读消息”
            </summary>
            <param name="msgid">指定消息的id</param>
            <param name="userid">指定用户的id</param>
            <returns>JSON对象，包含相应的“未读消息”</returns>
        </member>
        <member name="M:health.Controllers.ReadMessageController.Set(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“未读消息”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“未读消息”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.ReadMessageController.Del(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“未读消息”。
            </summary>
            <param name="req">在请求body中JSON形式的“未读消息”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.TreatController.GetOrgTreatList(System.Int32)">
            <summary>
            获取机构的“用药记录”列表
            </summary>
            <param name="orgid">检索指定机构的id</param>
            <returns>JSON对象，包含相应的“用药记录”数组</returns>
        </member>
        <member name="M:health.Controllers.TreatController.GetPersonTreatList(System.Int32)">
            <summary>
            获取个人的“用药记录”历史
            </summary>
            <param name="personid">检索指定个人的id</param>
            <returns>JSON对象，包含相应的“用药记录”数组</returns>
        </member>
        <member name="M:health.Controllers.TreatController.GetTreat(System.Int32)">
            <summary>
            获取“用药记录”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“用药记录”信息</returns>
        </member>
        <member name="M:health.Controllers.TreatController.SetTreat(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“用药记录”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“用药记录”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.TreatController.DelTreat(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“用药记录”。
            </summary>
            <param name="req">在请求body中JSON形式的“用药记录”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.TreatItemController.GetPersonTreatItemList(System.Int32)">
            <summary>
            获取个人的“用药记录明细”历史
            </summary>
            <param name="personid">检索指定个人的id</param>
            <returns>JSON对象，包含相应的“用药记录明细”数组</returns>
        </member>
        <member name="M:health.Controllers.TreatItemController.GetTreatItemList(System.Int32)">
            <summary>
            获取关联的“用药记录明细”历史
            </summary>
            <param name="treatid">检索指定个人的id</param>
            <returns>JSON对象，包含相应的“用药记录明细”数组</returns>
        </member>
        <member name="M:health.Controllers.TreatItemController.GetTreatItem(System.Int32)">
            <summary>
            获取“用药记录明细”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“用药记录明细”信息</returns>
        </member>
        <member name="M:health.Controllers.TreatItemController.SetTreatItem(Newtonsoft.Json.Linq.JObject[])">
            <summary>
            更改“用药记录明细”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="items">在请求body中JSON形式的“用药记录明细”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.TreatItemController.DelTreatItem(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“用药记录明细”。
            </summary>
            <param name="req">在请求body中JSON形式的“用药记录明细”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.VaccController.GetOrgVaccList(System.Int32)">
            <summary>
            获取机构的“接种记录”列表
            </summary>
            <param name="orgid">检索指定机构的id</param>
            <returns>JSON对象，包含相应的“接种记录”数组</returns>
        </member>
        <member name="M:health.Controllers.VaccController.GetPersonVaccList(System.Int32)">
            <summary>
            获取个人的“接种记录”历史
            </summary>
            <param name="personid">检索指定个人的id</param>
            <returns>JSON对象，包含相应的“接种记录”数组</returns>
        </member>
        <member name="M:health.Controllers.VaccController.GetVacc(System.Int32)">
            <summary>
            获取“接种记录”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“接种记录”信息</returns>
        </member>
        <member name="M:health.Controllers.VaccController.SetVacc(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“接种记录”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“接种记录”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.VaccController.DelVacc(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“接种记录”。
            </summary>
            <param name="req">在请求body中JSON形式的“接种记录”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="T:health.Controllers.FileController">
            <summary>
            上传下载图片
            </summary>
        </member>
        <member name="M:health.Controllers.FileController.UploadFile(System.Int32,Microsoft.AspNetCore.Http.IFormFile[],System.Threading.CancellationToken)">
            <summary>
            上传指定“检查结果”对应的图片
            </summary>
            <param name="checkid"></param>
            <param name="files"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:health.Controllers.CheckProductController.GetCheckProductList(System.Int32,System.Int32)">
            <summary>
            获取机构的“检测产品”列表
            </summary>
            <returns>JSON对象，包含相应的“检测产品”数组</returns>
        </member>
        <member name="M:health.Controllers.CheckProductController.GetCheckProduct(System.Int32)">
            <summary>
            获取“检测产品”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“检测产品”信息</returns>
        </member>
        <member name="M:health.Controllers.CheckProductController.SetCheckProduct(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“检测产品”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“检测产品”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.CheckProductController.DelCheckProduct(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“检测产品”。
            </summary>
            <param name="req">在请求body中JSON形式的“检测产品”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationController.GetMedicationList(System.Int32,System.Int32)">
            <summary>
            获取机构的“药品”列表
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns>JSON对象，包含相应的“药品”数组</returns>
        </member>
        <member name="M:health.Controllers.MedicationController.GetMedication(System.Int32)">
            <summary>
            获取“药品”信息
            </summary>
            <param name="id">指定的id</param>
            <returns>JSON对象，包含相应的“药品”信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationController.SetMedication(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“药品”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“药品”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MedicationController.DelMedication(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“药品”。
            </summary>
            <param name="req">在请求body中JSON形式的“药品”信息</param>
            <returns>响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.OptionController.GetOptionList(System.String)">
            <summary>
            获取“参数”列表
            </summary>
            <param name="section">节名</param>
            <returns>JSON数组形式的“参数”信息</returns>
        </member>
        <member name="M:health.Controllers.OptionController.GetOption(System.Int32)">
            <summary>
            获取“参数”信息
            </summary>
            <returns>JSON形式的某个“参数”信息</returns>
        </member>
        <member name="M:health.Controllers.OptionController.SetOption(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“参数”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“参数”信息</param>
            <returns>JSON形式的响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.OptionController.DelOption(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“参数”信息
            </summary>
            <param name="req">在请求body中JSON形式的“参数”信息</param>
            <returns>JSON形式的响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.OrgnizationController.GetOrgList(System.Int32,System.Int32)">
            <summary>
            获取“机构”列表
            </summary>
            <returns>JSON数组形式的“机构”信息</returns>
        </member>
        <member name="M:health.Controllers.OrgnizationController.GetOrgList(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取指定区县级行政地址下的“机构”列表
            </summary>
            <returns>JSON数组形式的“机构”信息</returns>
        </member>
        <member name="M:health.Controllers.OrgnizationController.GetOrg(System.Int32)">
            <summary>
            获取“机构”信息
            </summary>
            <returns>JSON形式的某个“机构”信息</returns>
        </member>
        <member name="M:health.Controllers.OrgnizationController.SetOrg(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“机构”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“机构”信息</param>
            <returns>JSON形式的响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.OrgnizationController.DelOrg(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“机构”信息
            </summary>
            <param name="req">在请求body中JSON形式的“机构”信息</param>
            <returns>JSON形式的响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.PersonController.GetPersonList(System.Int32,System.Int32)">
            <summary>
            获取个人列表，[人员转诊]菜单
            </summary>
            <returns>JSON数组形式的个人信息</returns>
        </member>
        <member name="M:health.Controllers.PersonController.GetPerson(System.Int32)">
            <summary>
            获取人员信息，初始化[人员信息录入]菜单
            </summary>
            <returns>JSON形式的某位个人信息，包括个人信息，</returns>
        </member>
        <member name="M:health.Controllers.PersonController.SetPerson(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改个人信息。如果id=0新增个人信息，如果id>0修改个人信息。
            </summary>
            <param name="req">在请求body中JSON形式的个人信息</param>
            <returns>JSON形式的响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.PersonController.DelPerson(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除个人信息
            </summary>
            <param name="req">在请求body中JSON形式的个人信息</param>
            <returns>JSON形式的响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.PersonController.Transfer(Newtonsoft.Json.Linq.JObject)">
            <summary>
            TODO: 转诊
            </summary>
            <param name="req">在请求body中JSON形式的转诊信息</param>
            <returns>JSON形式的响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MenuController.GetMenu(System.Int32)">
            <summary>
            获取系统菜单列表
            </summary>
            <param name="pid">指定根菜单的id</param>
            <returns>JSON对象，递归地包含了相应的系统菜单</returns>
        </member>
        <member name="M:health.Controllers.MenuController.SetMenu(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更改“菜单”信息。如果id=0新增，如果id>0修改。
            </summary>
            <param name="req">在请求body中JSON形式的“菜单”信息</param>
            <returns>JSON形式的响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.MenuController.DelMenu(Newtonsoft.Json.Linq.JObject)">
            <summary>
            删除“菜单”信息
            </summary>
            <param name="req">在请求body中JSON形式的“菜单”信息</param>
            <returns>JSON形式的响应状态信息</returns>
        </member>
        <member name="M:health.Controllers.WeatherForecastController.GetAreaList(System.Int32)">
            <summary>
            获取列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:health.Controllers.WeatherForecastController.GetArea(System.Int32)">
            <summary>
            获取区域信息
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
